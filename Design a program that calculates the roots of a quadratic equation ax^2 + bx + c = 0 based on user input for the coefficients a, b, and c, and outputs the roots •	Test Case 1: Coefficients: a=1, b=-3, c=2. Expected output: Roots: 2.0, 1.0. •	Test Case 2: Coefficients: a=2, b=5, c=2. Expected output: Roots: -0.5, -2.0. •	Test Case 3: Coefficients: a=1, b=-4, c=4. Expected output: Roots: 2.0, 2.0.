import math
def calculate_roots(a, b, c):
    discriminant = b**2 - 4*a*c
    if discriminant > 0:
        root1 = (-b + math.sqrt(discriminant)) / (2*a)
        root2 = (-b - math.sqrt(discriminant)) / (2*a)
        return root1, root2
    elif discriminant == 0:
        root = -b / (2*a)
        return root, root
    else:
        real_part = -b / (2*a)
        imaginary_part = math.sqrt(abs(discriminant)) / (2*a)
        root1 = complex(real_part, imaginary_part)
        root2 = complex(real_part, -imaginary_part)
        return root1, root2
a1, b1, c1 = 1, -3, 2
roots1 = calculate_roots(a1, b1, c1)
print(f"Test Case 1: Coefficients: a={a1}, b={b1}, c={c1}. Expected output: Roots: {roots1[0]}, {roots1[1]}.")
a2, b2, c2 = 2, 5, 2
roots2 = calculate_roots(a2, b2, c2)
print(f"Test Case 2: Coefficients: a={a2}, b={b2}, c={c2}. Expected output: Roots: {roots2[0]}, {roots2[1]}.")
a3, b3, c3 = 1, -4, 4
roots3 = calculate_roots(a3, b3, c3)
print(f"Test Case 3: Coefficients: a={a3}, b={b3}, c={c3}. Expected output: Roots: {roots3[0]}, {roots3[1]}.")
